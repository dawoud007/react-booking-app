{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Bookapp\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Bookapp\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Bookapp\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Bookapp\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Bookapp\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Bookapp\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Bookapp\\\\project\\\\src\\\\components\\\\search.js\";\nimport React, { Component } from 'react';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.search = function (query) {\n      return fetch(\"\".concat(api, \"/search\"), {\n        method: 'POST',\n        headers: _objectSpread({}, headers, {\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify({\n          query: query\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return data.books;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var api = \"https://reactnd-books-api.udacity.com\"; // Generate a unique token for storing your bookshelf data on the backend server.\n\n      var token = localStorage.token;\n      if (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n      var headers = {\n        'Accept': 'application/json',\n        'Authorization': token\n      };\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: function onClick() {\n          return _this2.setState({\n            showSearchPage: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["C:\\Users\\user\\OneDrive\\Desktop\\Bookapp\\project\\src\\components\\search.js"],"names":["React","Component","Search","search","query","fetch","api","method","headers","body","JSON","stringify","then","res","json","data","books","token","localStorage","Math","random","toString","substr","setState","showSearchPage"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,M;;;;;;;;;;;;;;;;;;UACJC,M,GAAS,UAACC,KAAD;AAAA,aACTC,KAAK,WAAIC,GAAJ,cAAkB;AACrBC,QAAAA,MAAM,EAAE,MADa;AAErBC,QAAAA,OAAO,oBACFA,OADE;AAEL,0BAAgB;AAFX,UAFc;AAMrBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,UAAAA,KAAK,EAALA;AAAF,SAAf;AANe,OAAlB,CAAL,CAOGQ,IAPH,CAOQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAPX,EAQGF,IARH,CAQQ,UAAAG,IAAI;AAAA,eAAIA,IAAI,CAACC,KAAT;AAAA,OARZ,CADS;AAAA,K;;;;;;;6BAWC;AAAA;;AACN,UAAMV,GAAG,GAAG,uCAAZ,CADM,CAIN;;AACA,UAAIW,KAAK,GAAGC,YAAY,CAACD,KAAzB;AACA,UAAI,CAACA,KAAL,EACEA,KAAK,GAAGC,YAAY,CAACD,KAAb,GAAqBE,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAC,CAAnC,CAA7B;AAEF,UAAMd,OAAO,GAAG;AACd,kBAAU,kBADI;AAEd,yBAAiBS;AAFH,OAAhB;AAIE,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACM,QAAL,CAAc;AAAEC,YAAAA,cAAc,EAAE;AAAlB,WAAd,CAAN;AAAA,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,2BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CAFF,CADA,EAgBA;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAhBA,CADJ;AAsBH;;;;EA/CgBvB,S;;AAiDrB,eAAeC,MAAf","sourcesContent":["import React ,{Component} from 'react'\r\n\r\nclass Search extends Component{\r\n  search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n\r\n    render(){\r\n      const api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n      // Generate a unique token for storing your bookshelf data on the backend server.\r\n      let token = localStorage.token\r\n      if (!token)\r\n        token = localStorage.token = Math.random().toString(36).substr(-8)\r\n      \r\n      const headers = {\r\n        'Accept': 'application/json',\r\n        'Authorization': token\r\n      }\r\n        return(\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\r\n              <div className=\"search-books-input-wrapper\">\r\n                {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n                <input type=\"text\" placeholder=\"Search by title or author\"/>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\"></ol>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nexport default Search"]},"metadata":{},"sourceType":"module"}